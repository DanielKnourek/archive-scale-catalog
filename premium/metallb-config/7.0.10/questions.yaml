groups:
  - name: Image
    description: |
      Configured the images to be used for the Chart.
      It's wise to use "digest pinned" tags and to avoid using "latest".

      Checkout the following documentation for more information:
      - https://truecharts.org/common/#images


  - name: General
    description: |
      For TrueNAS SCALE We've grouped a number of settings here, that all effact how apps run in general.

      Checkout the following documentation for more information:
        - https://truecharts.org/common/global/
        - https://truecharts.org/common/#tz
        - https://truecharts.org/common/podoptions/
        - Image Pull Secrets


  - name: Workload
    description: |
      These settings configure how the actual Pods and containers are running.
      Generally, on SCALE, we only expose a limited subset of these settings for the primary workload and container.

      Checkout the following documentation for more information:
      - https://truecharts.org/common/workload/
      - https://truecharts.org/common/container/


  - name: App Configuration
    description: |
       Every application has different values that may be required to run or have multiple options that the user may choose to enable or disable to change the behavior of the application.
       Most options should have a Tooltip (Circled Question Mark) to further describe said option.

       To find more information, lookup your chart-specific documentation in the Charts List: https://truecharts.org/charts/description-list/

  - name: Services
    description: |
      Service and Networking options for any applications are contained here.
      Some applications may have complicated networking setups with multiple options or some may have no options here at all.

      Options here include the service and port configurations for the application, and more may be enabled or changed under the Advanced Settings and Show Expert Config boxes.

      Checkout the following documentation for more information:
      - https://truecharts.org/common/service/

  - name: Networking
    description: |
      Contains advanced networking options that are not actively supported by the TrueCharts team.
      Currently only contains scaleExternalInterfaces.

      Checkout the following documentation for more information:
      - https://truecharts.org/common/scaleexternalinterface/

  - name: Persistence
    description: |
      Many applications will have certain options for storage to be configurable by the user, the main two being PVC and hostpath but may include other types.
      This storage is called Persistence since it is not deleted upon restart or upgrade of an application.

      Checkout the following documentation for more information:
      - https://truecharts.org/common/persistence/
      - https://truecharts.org/scale/guides/nfs-share/
      - https://truecharts.org/general/faq/#why-pvc-is-recommended-over-hostpath


  - name: Ingress
    description: |
      Ingress (more commonly known as Reverse Proxy) settings can be configured here. This is how Kubernetes connects your Applications in containers to FQDNs (fully qualified domain names).
      If you choose to enable this you must have a "Ingress Provider" aka "Reverse Proxy" installed (We highly advice Traefik: https://truecharts.org/charts/premium/traefik/)
      It also requiresa DNS service to actually resolve the DNS name of the FQDN specified.

      Checkout the following documentation for more information:
      - https://truecharts.org/common/ingress/


  - name: SecurityContext
    description: |
      The security settings for each application and/or permissions that each application may have for the files/directories created.
      Each application will come with predefined permissions but users may want to change certain setting depending on their usage or capabilities.

      Unless necessary users are advised to keep this section mostly to defaults.

      Checkout the following documentation for more information:
      - https://truecharts.org/common/securitycontext/


  - name: Resources
    description: |
      Resources limits that have been defined by each application are in this section.
      Most will have a specific default that some users may want to change based on their specific hardware or needs.

      This also contains the options to mount GPUs or, more precisely, "request" GPU's to be mounted.

      Checkout the following documentation for more information:
      - https://truecharts.org/common/resources/

  - name: Devices
    description: |
      These are special "mountpoints" that can be used to mount miscelanious USB and PCI devices using special hostPath mounts.
      For clearity we've decided to seperate this from persistence on SCALE.

      Checkout the following documentation for more information:
      - https://truecharts.org/common/persistence/device/
      - https://truecharts.org/scale/guides/pci-passthrough/

  - name: Middlewares
    description: Traefik Middlewares

  - name: StorageClass
    description: |
      StorageClasses define where to storage Storage.

      Checkout the following documentation for more information:

  - name: Metrics
    description: |
      Contains options to configure Prometheus metrics for the application.

      Checkout the following documentation for more information:
      - https://truecharts.org/common/metrics/


  - name: Addons
    description: |
      Addons that are supplied by the TrueCharts team to add additional capabilities for users to use on top of the application’s defaults.
      Things included here are VPN addons, Codeserver for editing files inside the application’s container, Netshoot for network troubelshooting, etc.

      Generally not required for use but may be necessary or usefull at times for specific applications.

      Checkout the following documentation for more information:
      - https://truecharts.org/common/addons/
      - https://truecharts.org/scale/guides/vpn-setup/


  - name: Experimental
    description: |
      Experimental Configuration Options
      Often these are not fully flushed-out, could randomly break or might not work at-all.

  - name: Postgresql
    description: |
      For Postgresql we use "CloudNative-PG" as a backend, which has to be installed first.

      Checkout the following documentation for more information:
      - https://truecharts.org/common/cnpg/
      - https://truecharts.org/scale/guides/sql-export/
      - https://truecharts.org/scale/guides/recover-cnpg/

  - name: Dependencies
    description: |
      contains dependency setting for which we, currently, do not have seperate catagories (yet)


  - name: Documentation
    description: |
      We added this section to make everyone aware that OpenSource isn't always easy.
      It doesn't keep existing without signficant ongoing support, so please consider supporting TrueCharts and other OpenSource projects.

      Before installing, be sure you've followed the https://truecharts.org/scale/guides/getting-started/
      We would also advice going over our https://truecharts.org/scale/guides/scale-intro/
      and many of the other documentation pages...

questions:
  - variable: global
    group: General
    label: "Global Settings"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: stopAll
          label: Stop All
          description: "Stops All Running pods and hibernates cnpg"
          schema:
            type: boolean
            default: false

  - variable: credentialsList
    group: General
    label: "Credentials (Experimental)"
    schema:
      type: list
      default: []
      items:
        - variable: credentialsEntry
          label: "Enter Credentials"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: name
                label: Name
                description: "Name"
                schema:
                  type: string
                  required: true
                  default: ""
              - variable: type
                label: Type
                description: "Type of Credential"
                schema:
                  type: string
                  default: "s3"
                  enum:
                    - value: s3
                      description: s3 Storage
              - variable: url
                label: "url"
                schema:
                  type: string
                  default: ""
                  required: true
              - variable: path
                label: "path"
                description: "Path Prefix not needed for most cases"
                schema:
                  type: string
                  default: ""
              - variable: bucket
                label: "bucket"
                schema:
                  show_if: [["type", "=", "s3"]]
                  type: string
                  default: ""
                  required: true
              - variable: accessKey
                label: "accessKey"
                schema:
                  show_if: [["type", "=", "s3"]]
                  type: string
                  default: ""
                  required: true
              - variable: secretKey
                label: "secretKey"
                schema:
                  show_if: [["type", "=", "s3"]]
                  type: string
                  default: ""
                  required: true
              - variable: encrKey
                label: "encrKey"
                description: "The Encryption key is needed for tools like volsync if not needed it will be ignored"
                schema:
                  show_if: [["type", "=", "s3"]]
                  type: string
                  default: "MYSECRETPASSPHRASE"
                  required: true

  - variable: operator
    group: App Configuration
    label: Operator Configuration
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: metallb
          label: 'metallb'
          schema:
            type: dict
            additional_attrs: true
            attrs:
              - variable: namespace
                label: 'Namespace (change to ix-APPNAME of metallb)'
                schema:
                  type: string
                  required: true
                  default: "ix-metallb"
  - variable: ipAddressPools
    group: App Configuration
    label: IP Address Pools Object
    schema:
      type: list
      default: []
      items:
        - variable: ipAddressPoolsEntry
          label: IP Address Pool Entry
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: name
                label: Name
                description: Name of the IP address pool
                schema:
                  type: string
                  required: true
                  default: ""
              - variable: autoAssign
                label: Auto Assign
                description: AutoAssign flag used to prevent MetallB from automatic
                    allocation for a pool.
                schema:
                  type: boolean
                  default: true
              - variable: avoidBuggyIPs
                label: Avoid Buggy IPs
                description: AvoidBuggyIPs prevents addresses ending with .0 and .255
                    to be used by a pool.
                schema:
                  type: boolean
                  default: false
              - variable: addresses
                label: Addresses Pools
                description: A list of IP address ranges over which MetalLB has authority.
                    You can list multiple ranges in a single pool, they will all share
                    the same settings. Each range can be either a CIDR prefix, or an
                    explicit start-end range of IPs.
                schema:
                  type: list
                  default: []
                  items:
                    - variable: addressPoolEntry
                      label: Address Pool Entry
                      schema:
                        type: string
                        default: ""
                        required: true
  - variable: L2Advertisements
    group: App Configuration
    label: L2 Advertisements
    description: L2Advertisement allows to advertise the LoadBalancer IPs provided
        by the selected pools via L2.
    schema:
      type: list
      default: []
      items:
        - variable: L2AdvertisementEntry
          label: L2 Advertisement Entry
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: name
                label: Name
                description: Name of the L2 Advertisement
                schema:
                  type: string
                  required: true
                  default: ""
              - variable: addressPools
                label: Address Pools
                description: The list of IPAddressPools to advertise via this advertisement,
                    selected by name.
                schema:
                  type: list
                  default: []
                  items:
                    - variable: addressPoolEntry
                      label: Address Pool Entry
                      schema:
                        type: string
                        default: ""
                        required: true
              - variable: nodeSelectors
                label: Node Selectors
                description: NodeSelectors allows to limit the nodes to announce as
                    next hops for the LoadBalancer IP. When empty, all the nodes having  are
                    announced as next hops.
                schema:
                  type: list
                  default: []
                  items:
                    - variable: nodeSelectorEntry
                      label: Node Selector Entry
                      schema:
                        type: string
                        default: ""
                        required: true
  - variable: Communities
    group: App Configuration
    label: Communities
    description: Community is a collection of aliases for communities. Users can
      define named aliases to be used in the BGPPeer CRD.
    schema:
      type: list
      default: []
      items:
        - variable: CommunityEntry
          label: Community Entry
          schema:
            additional_attrs: true
            type: dict
            attrs:
            - variable: name
              label: Name
              description: The name of the alias for the community.
              schema:
                type: string
                required: true
                default: ""
            - variable: value
              label: Value
              description: The BGP community value corresponding to the given name.
              schema:
                type: string
                required: true
                default: ""
  - variable: Peers
    group: App Configuration
    label: Peers
    description: BGPPeer is the Schema for the peers API.
    schema:
      type: list
      default: []
      items:
        - variable: PeerEntry
          label: Peer Entry
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: name
                label: Name
                description: The name of the peer.
                schema:
                  type: string
                  required: true
                  default: ""
              - variable: bfdProfile
                label: BFD Profile
                description: The name of the BFD Profile to be used for the BFD session
                    associated to the BGP session. If not set, the BFD session won't
                    be set up.
                schema:
                  type: string
                  default: ""
              - variable: ebgpMultiHop
                label: EBGP MultiHop
                description: TTo set if the BGPPeer is multi-hops away. Needed for
                    FRR mode only.
                schema:
                  type: boolean
                  default: false
              - variable: holdTime
                label: Hold Time
                description: Requested BGP hold time, per RFC4271.
                schema:
                  type: int
              - variable: keepaliveTime
                label: Keep Alive Time
                description: Requested BGP keep alive time, per RFC4271.
                schema:
                  type: int
              - variable: myASN
                label: My ASN
                description: AS number to use for the local end of the session.
                schema:
                  type: int
              - variable: password
                label: Password
                description: Authentication password for routers enforcing TCP MD5
                    authenticated sessions
                schema:
                  type: string
                  private: true
                  default: ""
              - variable: peerASN
                label: Peer ASN
                description: AS number to expect from the remote end of the session.
                schema:
                  type: string
                  valid_chars: '^[0-9]*$'
                  default: ""
              - variable: peerAddress
                label: Peer Address
                description: Address to dial when establishing the session.
                schema:
                  type: string
                  default: ""
              - variable: peerPort
                label: Peer Port
                description: Port to dial when establishing the session.
                schema:
                  type: string
                  valid_chars: '^[0-9]*$'
                  default: ""
              - variable: routerID
                label: Router ID
                description: BGP router ID to advertise to the peer
                schema:
                  type: string
                  default: ""
              - variable: sourceAddress
                label: Source Address
                description: Source address to use when establishing the session.
                schema:
                  type: string
                  default: ""
              - variable: nodeSelectors
                label: Node Selectors
                description: Only connect to this peer on nodes that match one of
                    these selectors.
                schema:
                  type: list
                  default: []
                  items:
                    - variable: nodeSelectorEntry
                      label: Node Selector Entry
                      schema:
                        type: string
                        default: ""
                        required: true
  - variable: BGPAdvertisements
    group: App Configuration
    label: BGP Advertisements
    description: BGPAdvertisement allows to advertise the IPs coming from the
      selected IPAddressPools via BGP.
    schema:
      type: list
      default: []
      items:
        - variable: BGPAdvertisementEntry
          label: BGP Advertisement Entry
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: name
                label: Name
                description: Name of the BGP Advertisement
                schema:
                  type: string
                  required: true
                  default: ""
              - variable: addressPools
                label: Address Pools
                description: The list of IPAddressPools to advertise via this advertisement,
                    selected by name.
                schema:
                  type: list
                  default: []
                  items:
                    - variable: addressPoolEntry
                      label: Address Pool Entry
                      schema:
                        type: string
                        default: ""
                        required: true
              - variable: aggregationLength
                label: Aggregation Length
                description: The aggregation-length advertisement option lets you
                  "roll up" the /32s into a larger prefix. Defaults to 32. Works for
                  IPv4 addresses.
                schema:
                  type: string
                  valid_chars: '^[0-9]*$'
                  default: ""
              - variable: localpref
                label: Local Pref
                description: The BGP LOCAL_PREF attribute which is used by BGP best
                  path algorithm, Path with higher localpref is preferred over one
                  with lower localpref.
                schema:
                  type: string
                  valid_chars: '^[0-9]*$'
                  default: ""
              - variable: communities
                label: Communities
                description: The BGP communities to be associated with the announcement.
                    Each item can be a community of the form 1234:1234 or the name of
                    an alias defined in the Community CRD.
                schema:
                  type: list
                  default: []
                  items:
                    - variable: communityEntry
                      label: Community Entry
                      schema:
                        type: string
                        default: ""
                        required: true
              - variable: peers
                label: Peers
                description: Peers limits the BGPpeer to advertise the ips of the
                    selected pools to. When empty, the loadbalancer IP is announced
                    to all the BGPPeers configured.
                schema:
                  type: list
                  default: []
                  items:
                    - variable: peerEntry
                      label: Peer Entry
                      schema:
                        type: string
                        default: ""
                        required: true
